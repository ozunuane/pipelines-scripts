name: Build and Deploy to Production

on:
  pull_request:
    branches:
      - master
    types: [closed]

env:
  PROJECT_ID: ${{ secrets.GCP_PROD_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NONCBA_PROD }}   # Add your cluster name here.
  GKE_ZONE: ${{ secrets.GKE_PROD_ZONE }}   # Add your cluster zone here.
  DEPLOYMENT_NAME: afl-service-merchantbanking-webapp # Add your deployment name here.
  IMAGE: afl/service-merchantbanking-webapp
  IMAGE_TAG: $GITHUB_SHA
  CONTEXT: --current

jobs:
  setup-build-publish-deploy:
    if: github.event.pull_request.merged == true
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GCP_PROD_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_PROD }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    # - name: Checkout submodules
    #   run: git submodule update --init --recursive

    - name: Add .env before build
      env:
          REACT_APP_META_MAP_CLIENT_ID: ${{ secrets.REACT_APP_META_MAP_CLIENT_ID }}
          REACT_APP_META_MAP_VIDEO_FLOW_ID: ${{ secrets.REACT_APP_META_MAP_VIDEO_FLOW_ID_PROD }}
          REACT_APP_META_MAP_DOCUMENT_ID: ${{ secrets.REACT_APP_META_MAP_DOCUMENT_ID_PROD }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
          REACT_APP_FIREBASE_FIRESTORE_USER_PATH: production
          REACT_APP_FIREBASE_FIRESTORE_ACCOUNT_PATH: production
          REACT_APP_FIREBASE_FIRESTORE_BILLERS_LIST_PATH: production/payments/billerList
          REACT_APP_FIREBASE_FIRESTORE_BANK_LIST_PATH: production/payments/bankList
          REACT_APP_FIREBASE_FIRESTORE_PAYMENT_DEFAULT_PATH: production/payments/paymentsDefaults
          REACT_APP_FIREBASE_FIRESTORE_BENEFICIARY_LIST_PATH: 9japay_users/production
      run: |
        touch .env
        echo REACT_APP_MERCHANT_BANKING_API_BASE_URL="https://mag.9japay.com/v1" >> .env
        echo REACT_APP_KYB_API_BASE_URL="https://kyb.9japay.com/v1" >> .env
        echo REACT_APP_RETAIL_BANKING_API_BASE_URL="https://retail-gateway.9japay.com/v1" >> .env
        echo REACT_APP_META_MAP_CLIENT_ID="$REACT_APP_META_MAP_CLIENT_ID" >> .env
        echo REACT_APP_META_MAP_VIDEO_FLOW_ID="$REACT_APP_META_MAP_VIDEO_FLOW_ID" >> .env
        echo REACT_APP_META_MAP_DOCUMENT_ID="$REACT_APP_META_MAP_DOCUMENT_ID" >> .env
        echo REACT_APP_FIREBASE_API_KEY="$REACT_APP_FIREBASE_API_KEY" >> .env
        echo REACT_APP_FIREBASE_AUTH_DOMAIN="$REACT_APP_FIREBASE_AUTH_DOMAIN" >> .env
        echo REACT_APP_FIREBASE_PROJECT_ID="$REACT_APP_FIREBASE_PROJECT_ID" >> .env
        echo REACT_APP_FIREBASE_STORAGE_BUCKET="$REACT_APP_FIREBASE_STORAGE_BUCKET" >> .env
        echo REACT_APP_FIREBASE_MESSAGING_SENDER_ID="$REACT_APP_FIREBASE_MESSAGING_SENDER_ID" >> .env
        echo REACT_APP_FIREBASE_APP_ID="$REACT_APP_FIREBASE_APP_ID" >> .env
        echo REACT_APP_FIREBASE_MEASUREMENT_ID="$REACT_APP_FIREBASE_MEASUREMENT_ID" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_USER_PATH="$REACT_APP_FIREBASE_FIRESTORE_USER_PATH" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_ACCOUNT_PATH="$REACT_APP_FIREBASE_FIRESTORE_ACCOUNT_PATH" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_BILLERS_LIST_PATH="$REACT_APP_FIREBASE_FIRESTORE_BILLERS_LIST_PATH" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_BANK_LIST_PATH="$REACT_APP_FIREBASE_FIRESTORE_BANK_LIST_PATH" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_PAYMENT_DEFAULT_PATH="$REACT_APP_FIREBASE_FIRESTORE_PAYMENT_DEFAULT_PATH" >> .env
        echo REACT_APP_FIREBASE_FIRESTORE_BENEFICIARY_LIST_PATH="$REACT_APP_FIREBASE_FIRESTORE_BENEFICIARY_LIST_PATH" >> .env
        
        

    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        cd prod-deploy
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        cd prod-deploy
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt update
        sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
        echo "##vso[task.setvariable variable=USE_GKE_GCLOUD_AUTH_PLUGIN]True"
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        sudo apt-get update && sudo apt-get --only-upgrade install kubectl google-cloud-sdk-skaffold google-cloud-sdk-gke-gcloud-auth-plugin google-cloud-sdk-kpt google-cloud-sdk-app-engine-go google-cloud-sdk-datalab google-cloud-sdk-nomos google-cloud-sdk-kubectl-oidc google-cloud-sdk-anthos-auth google-cloud-sdk-minikube google-cloud-sdk-app-engine-grpc google-cloud-sdk-terraform-tools google-cloud-sdk-config-connector google-cloud-sdk-log-streaming google-cloud-sdk-firestore-emulator google-cloud-sdk-app-engine-java google-cloud-sdk-cbt google-cloud-sdk-harbourbridge google-cloud-sdk-local-extract google-cloud-sdk-cloud-build-local google-cloud-sdk-cloud-run-proxy google-cloud-sdk-spanner-emulator google-cloud-sdk-app-engine-python-extras google-cloud-sdk-bigtable-emulator google-cloud-sdk google-cloud-sdk-pubsub-emulator google-cloud-sdk-datastore-emulator google-cloud-sdk-app-engine-python google-cloud-sdk-package-go-module
        source ~/.bashrc
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
        gcloud compute ssh naijapay-bastion --project $PROJECT_ID --zone=europe-west2-a --  -L 8888:localhost:8888 -N -q -f
        export HTTPS_PROXY=localhost:8888
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        kubectl apply -k .
        kubectl rollout status deployment/${{env.DEPLOYMENT_NAME}} --namespace noncba
        kubectl get services -n noncba -o wide
